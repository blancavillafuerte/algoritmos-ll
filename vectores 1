#include "stdafx.h"
#include "iostream"
#include "stdlib.h"
#include "stdio.h"
#include "conio.h"

using namespace std;

void cargar(int v[], int n)
{
 int x; 
 for(int i=0;i<n;i++)
 {
	 cout<<"Elemento:";
	 cin>>x;
	 v[i]=x;
 }
}

void mostrar(int v[], int n)
{
 for(int i=0;i<n;i++)
	 cout<<v[i];

 cout<<endl;
}

void insertarPosicion(int v[], int &n, int x, int pos)
{
 if(pos < 0 || pos > n)
	 cout<<"Posicion no valida...!!!";
 else
 {
   int k=n-1;
   while(k>=pos)
   {
      v[k+1]=v[k];
	  k--;
   }
   v[pos]=x;
   n=n+1;
 }
}

void insertarUlt(int v[], int &n, int x)
{
   insertarPosicion(v,n,x,n); 
}

void insertarPri(int v[], int &n, int x)
{
   insertarPosicion(v,n,x,0); 
}

//funcion que elimina una posicion del vector
void eliminarPosicion(int v[], int &n, int pos)
{
 if(pos < 0 || pos > n)
  	cout<<"Posicion no valida...!!!";
 else
 {
    int k=pos + 1;
    while(k < n)
    {
       v[k-1]=v[k];
	   k++;
    }	
    n=n-1;
 }
}

void eliminarPri(int v[], int &n)
{
   eliminarPosicion(v,n,0); 
}

void eliminarUlt(int v[], int &n)
{
   eliminarPosicion(v,n,n-1); 
}

//funcion que elimina los elementos pares
void eliminarPares(int v[], int &n)
{
  int i=0;
  while(i<n)
  {
     if(v[i] % 2 == 0)
		 eliminarPosicion(v,n,i);
	 else
		 i++;
  }  
}
//Funcion para que rote segun las manecillas del reloj
void rotar (int V[], int n, int k)
{
	int i=1;
	while (i<=k)
	{
		insertarUlt(V,n,V[0]);
		eliminarPri(V,n);
		i++;
	}
}

//PARA ELIMINAR EL NUMERO MAYOR DE UN VECTOR
void eliminarMayor(int v[], int n)
{
	int i=0,k,may;
	may=v[0];
	while (i<n)
	{
		
		if(may<v[i])
		{
			may=v[i];
			k=i;
			i++;
		}
		else
			i++;

	}
	eliminarPosicion(v,n,k);
	eliminarUlt(v,n);
}

/// para contar los elementos repetidos
//////////////////////////////////////////////////////////////
void elementosRepetidos(int v[], int n)
{
	int i=0,j=0,elem,cont;
	while (j<n)
	{
		elem= v[j];
		cont=0;
		while(i<n)
			{
				if(v[i]==elem)
				{
					cont++;
					eliminarPosicion(v,n,i);
				}
				else
					i++;
			}
		cout<<"elem: "<<elem<<" cant rep: "<<cont<<endl;
		j++;
	}
}
/////////////////////////////////////////////////////////////////
//ENCONTRAR EL ELEMENTO MAYOR CERCANO DE UN VECTOR

int mayorCercano(int v[], int n, int x)
{
	int j=0,i=0,tamv=0,men;
	int a[50];
	while (i<n)
	{
		if(v[i]>x)
		{
			a[tamv]=v[i];
			tamv++;
		}
		i++;
	}
	men=a[0];
	while(j<tamv)
	{
		
		if(men>a[j])
		{
			men=a[j];
			j++;
		}
		else
			j++;
	}
	return(men);
}

void repetidos( int v[],int n, int elem, int &cont)
{
	int i=0;
	
}
void main()
{
	int n,pos,x,k;
	int v[50];
	cout<<"Dimension del vector:";
	cin>>n;
	cargar(v,n);
	mostrar(v,n);
	cout<<"Mayor cercano a que nuuumero:";
	cin>>x;
	pos=mayorCercano(v,n,x);
	cout<<pos;
	//cout<<"Elemento:";
	//cin>>x;
	//cout<<"Posicion:";
	//cin>>pos;
	
	getch();
	
}
